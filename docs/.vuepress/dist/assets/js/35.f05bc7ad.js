(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{355:function(s,t,a){"use strict";a.r(t);var n=a(18),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"gitbook安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitbook安装"}},[s._v("#")]),s._v(" gitbook安装")]),s._v(" "),a("p",[s._v("在本地生成各类版本的文档电子书")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://blog.csdn.net/guomutian911/article/details/45744885",target:"_blank",rel:"noopener noreferrer"}},[s._v("config参考文档"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://toolchain.gitbook.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("gitbook官方文档"),a("OutboundLink")],1)])]),s._v(" "),a("ul",[a("li",[s._v("搭建虚拟机并调通网络")]),s._v(" "),a("li",[s._v("安装基础包")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rsync")]),s._v("\n$ yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc-c++\n")])])]),a("ul",[a("li",[s._v("下载安装包")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /data\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://nodejs.org/dist/v0.10.48/node-v0.10.48.tar.gz，\n")])])]),a("ul",[a("li",[s._v("安装")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zxvf node-v0.10.48.tar.gz\n$ ./configure --prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/node/0.10.48\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),a("ul",[a("li",[s._v("环境变量配置")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/profile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set for nodejs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NODE_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/node/0.10.48\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NODE_HOME")]),s._v("/bin:"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# :wq保存并退出，编译/etc/profile 使配置生效")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /etc/profile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 验证是否安装配置成功")]),s._v("\n$ node -v\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm模块安装路径")]),s._v("\n/usr/local/node/0.10.48/lib/node_modules/npm\n")])])]),a("ul",[a("li",[s._v("安装gitbook")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g gitbook-cli\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看gitbook是否安装成功")]),s._v("\n$ gitbook -V\n")])])]),a("ul",[a("li",[s._v("生成gitbook项目")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" myGitBook\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" myGitBook/\n$ gitbook init\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前目录下启动")]),s._v("\n$ gitbook serve "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 非当前目录下启动")]),s._v("\n$ gitbook serve ./图书目录\n")])])]),a("ul",[a("li",[s._v("备注")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. linux下，源码的安装一般由3个步骤组成：配置（configure）、编译（make）、安装（make install）\n2. 不指定prefix，则可执行文件默认放在/usr /local/bin，库文件默认放在/usr/local/lib，配置文件默认放在/usr/local/etc。其它的资源文件放在/usr /local/share。\n你要卸载这个程序，要么在原来的make目录下用一次make uninstall（前提是make文件指定过uninstall）,要么去上述目录里面把相关的文件一个个手工删掉。\n3. ./configure是源代码安装的第一步，主要的作用是对即将安装的软件进行配置，检查当前的环境是否满足要安装软件的依赖关系，但并不是所有的tar包都是源代码的包\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);