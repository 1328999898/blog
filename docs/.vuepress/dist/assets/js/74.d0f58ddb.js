(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{397:function(t,a,s){"use strict";s.r(a);var e=s(18),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),s("blockquote",[s("p",[t._v("核心是store(仓库)，相当于一个容器，存储各种状态(state)")])]),t._v(" "),s("ul",[s("li",[t._v("vuex的状态存储是响应式的。即读取状态时，如果状态发生变化，相应的组件也会响应的更新")]),t._v(" "),s("li",[t._v("不能直接改变store中的状态，改变状态的唯一途径是显示的提交(commit)mutation")]),t._v(" "),s("li",[t._v("vuex使用单一状态树，使用一个对象包含全部的应用层级状态")])]),t._v(" "),s("h2",{attrs:{id:"核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[t._v("#")]),t._v(" 核心")]),t._v(" "),s("h3",{attrs:{id:"一、state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、state"}},[t._v("#")]),t._v(" 一、State")]),t._v(" "),s("blockquote",[s("p",[t._v("状态，由于vuex的状态时响应式的，因此从store实例中读取状态的最简单的方法是从计算属性(computed)中获取某个状态")])]),t._v(" "),s("p",[t._v("mapState")]),t._v(" "),s("blockquote",[s("p",[t._v("使用"),s("code",[t._v("mapState")]),t._v("辅助函数帮助我们生成计算属性，减少声明计算属性的重复和冗余")])]),t._v(" "),s("h3",{attrs:{id:"二、getter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、getter"}},[t._v("#")]),t._v(" 二、Getter")]),t._v(" "),s("blockquote",[s("p",[t._v("state派生出来的状态")])]),t._v(" "),s("ul",[s("li",[t._v("通过属性访问: Getter 会暴露为 store.getters 对象，可以通过获取属性的方式访问"),s("code",[t._v("store.getters.属性")])]),t._v(" "),s("li",[t._v("通过方法访问")]),t._v(" "),s("li",[s("code",[t._v("mapGetters")]),t._v("辅助函数: 将store中的getter映射到局部的计算属性")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapGetters "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    computed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapGetters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doneTodosCount'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'anotherGetter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"三、mutation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、mutation"}},[t._v("#")]),t._v(" 三、Mutation")]),t._v(" "),s("blockquote",[s("p",[t._v("改变状态，且必须是同步函数")])]),t._v(" "),s("h3",{attrs:{id:"四、action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、action"}},[t._v("#")]),t._v(" 四、Action")]),t._v(" "),s("blockquote",[s("p",[t._v("提交mutation，并且可以包含任何异步操作")])]),t._v(" "),s("ul",[s("li",[t._v("分发"),s("code",[t._v("Action")]),t._v(": 通过"),s("code",[t._v("store.dispatch")]),t._v("方法触发")])]),t._v(" "),s("h3",{attrs:{id:"五、module"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、module"}},[t._v("#")]),t._v(" 五、Module")]),t._v(" "),s("blockquote",[s("p",[t._v("可以将store分割成模块(module)，每个模块拥有自己的state、mutation、action、getter等")])]),t._v(" "),s("ul",[s("li",[t._v("命名空间："),s("code",[t._v("namespaced: true")]),t._v("，配置了命名空间的模块的所有的getter、action、mutation都会根据模块的注册路径调整命名")])])])}),[],!1,null,null,null);a.default=r.exports}}]);